{
  "steps": [
    {
      "type": "loop",
      "config": {
        "items": "current_components",
        "item_key": "component",
        "max_concurrency": 0,
        "substeps": [
          {
            "type": "conditional",
            "config": {
              "condition": "file_exists('{{output_dir}}/analysis/{{component.component_id}}_analysis.json')",
              "if_false": {
                "steps": [
                  {
                    "type": "read_files",
                    "config": {
                      "path": "{{output_dir}}/components/{{component.component_id}}_spec.md",
                      "content_key": "component_spec"
                    }
                  },
                  {
                    "type": "llm_generate",
                    "config": {
                      "model": "{{model|default:'openai/o4-mini'}}",
                      "prompt": "Analyze this component to determine if it needs to be split further.\n\nComponent ID: {{component.component_id}}\nComponent Specification:\n{{component_spec}}\n\nAnalyze the complexity and coherence of this component. If it's too large or handles multiple distinct responsibilities, it should be split into smaller components.\n\nProvide your analysis as a JSON object with the following structure:\n{\n  \"needs_splitting\": true/false,\n  \"reasoning\": \"Explanation of your decision\",\n  \"recommended_subcomponents\": [\n    {\n      \"component_id\": \"subcomponent_identifier\",\n      \"component_name\": \"Human Readable Subcomponent Name\",\n      \"description\": \"Brief description of this subcomponent\"\n    }\n  ]\n}",
                      "output_format": {
                        "type": "object",
                        "properties": {
                          "needs_splitting": { "type": "boolean" },
                          "reasoning": { "type": "string" },
                          "recommended_subcomponents": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "component_id": { "type": "string" },
                                "component_name": { "type": "string" },
                                "description": { "type": "string" }
                              },
                              "required": [
                                "component_id",
                                "component_name",
                                "description"
                              ]
                            }
                          }
                        },
                        "required": [
                          "needs_splitting",
                          "reasoning",
                          "recommended_subcomponents"
                        ]
                      },
                      "output_key": "component_analysis"
                    }
                  },
                  {
                    "type": "write_files",
                    "config": {
                      "files": [
                        {
                          "path": "analysis/{{component.component_id}}_analysis.json",
                          "content_key": "component_analysis"
                        }
                      ],
                      "root": "{{output_dir}}"
                    }
                  }
                ]
              },
              "if_true": {
                "steps": [
                  {
                    "type": "read_files",
                    "config": {
                      "path": "{{output_dir}}/analysis/{{component.component_id}}_analysis.json",
                      "content_key": "component_analysis",
                      "merge_mode": "dict"
                    }
                  }
                ]
              }
            }
          }
        ],
        "result_key": "analysis_results"
      }
    },
    {
      "type": "llm_generate",
      "config": {
        "model": "{{model|default:'openai/o4-mini'}}",
        "prompt": "Process analysis results and categorize components.\n\nAnalysis Results:\n{{analysis_results}}\n\nFor each component, determine if it needs splitting. If it does, add it to components_to_split. If not, add it to final_components.\n\nOutput a JSON object with structure:\n{\n  \"final_components\": [...],\n  \"components_to_split\": [...]\n}",
        "output_format": {
          "type": "object",
          "properties": {
            "final_components": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "component_id": { "type": "string" },
                  "needs_analysis": { "type": "boolean" }
                },
                "required": ["component_id", "needs_analysis"]
              }
            },
            "components_to_split": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "component_id": { "type": "string" },
                  "needs_analysis": { "type": "boolean" }
                },
                "required": ["component_id", "needs_analysis"]
              }
            }
          },
          "required": ["final_components", "components_to_split"]
        },
        "output_key": "categorized_components"
      }
    },
    {
      "type": "write_files",
      "config": {
        "files": [
          {
            "path": "analysis/categorized_components.json",
            "content_key": "categorized_components"
          }
        ],
        "root": "{{output_dir}}"
      }
    },
    {
      "type": "loop",
      "config": {
        "items": "categorized_components.components_to_split",
        "item_key": "component",
        "max_concurrency": 0,
        "substeps": [
          {
            "type": "conditional",
            "config": {
              "condition": "file_exists('{{output_dir}}/analysis/{{component.component_id}}_subcomponents.json')",
              "if_false": {
                "steps": [
                  {
                    "type": "read_files",
                    "config": {
                      "path": "{{output_dir}}/components/{{component.component_id}}_spec.md",
                      "content_key": "component_spec"
                    }
                  },
                  {
                    "type": "read_files",
                    "config": {
                      "path": "{{output_dir}}/analysis/{{component.component_id}}_analysis.json",
                      "content_key": "component_analysis",
                      "merge_mode": "dict"
                    }
                  },
                  {
                    "type": "conditional",
                    "config": {
                      "condition": "{{component_analysis.needs_splitting}}",
                      "if_true": {
                        "steps": [
                          {
                            "type": "llm_generate",
                            "config": {
                              "model": "{{model|default:'openai/o4-mini'}}",
                              "prompt": "Create detailed specifications for each sub-component identified in the analysis.\n\nParent Component Specification:\n{{component_spec}}\n\nComponent Analysis:\n{{component_analysis}}\n\nFor each sub-component, create a complete specification that includes purpose, requirements, implementation considerations, and dependencies. Output a list of files, one for each sub-component specification.",
                              "output_format": "files",
                              "output_key": "subcomponent_specs"
                            }
                          },
                          {
                            "type": "write_files",
                            "config": {
                              "files_key": "subcomponent_specs",
                              "root": "{{output_dir}}/components"
                            }
                          },
                          {
                            "type": "llm_generate",
                            "config": {
                              "model": "{{model|default:'openai/o4-mini'}}",
                              "prompt": "Extract the component IDs from these sub-component specifications and create a list of sub-components for further processing.\n\nSub-Component Specs:\n{{subcomponent_specs}}\n\nOutput a JSON array of component objects with structure:\n[\n  {\n    \"component_id\": \"subcomponent_identifier\",\n    \"needs_analysis\": true,\n    \"parent_id\": \"{{component.component_id}}\"\n  }\n]",
                              "output_format": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "component_id": { "type": "string" },
                                    "needs_analysis": { "type": "boolean" },
                                    "parent_id": { "type": "string" }
                                  },
                                  "required": [
                                    "component_id",
                                    "needs_analysis",
                                    "parent_id"
                                  ]
                                }
                              ],
                              "output_key": "component_subcomponents"
                            }
                          },
                          {
                            "type": "write_files",
                            "config": {
                              "files": [
                                {
                                  "path": "analysis/{{component.component_id}}_subcomponents.json",
                                  "content_key": "component_subcomponents"
                                }
                              ],
                              "root": "{{output_dir}}"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "if_true": {
                "steps": [
                  {
                    "type": "read_files",
                    "config": {
                      "path": "{{output_dir}}/analysis/{{component.component_id}}_subcomponents.json",
                      "content_key": "component_subcomponents",
                      "merge_mode": "dict"
                    }
                  }
                ]
              }
            }
          }
        ],
        "result_key": "sub_components"
      }
    },
    {
      "type": "llm_generate",
      "config": {
        "model": "{{model|default:'openai/o4-mini'}}",
        "prompt": "Update the processing state based on results.\n\nCurrent State:\n{{process_state}}\n\nCategorized Components:\n{{categorized_components}}\n\nSub-Components:\n{{sub_components}}\n\nIncrement the iteration counter. Set done_processing to true if there are no components to split or if iteration >= max_iterations.\n\nOutput an updated JSON object with structure:\n{\n  \"iteration\": {{process_state.iteration | plus: 1}},\n  \"max_iterations\": {{process_state.max_iterations}},\n  \"done_processing\": <true/false>\n}",
        "output_format": {
          "type": "object",
          "properties": {
            "iteration": { "type": "integer" },
            "max_iterations": { "type": "integer" },
            "done_processing": { "type": "boolean" }
          },
          "required": ["iteration", "max_iterations", "done_processing"]
        },
        "output_key": "updated_process_state"
      }
    },
    {
      "type": "write_files",
      "config": {
        "files": [
          {
            "path": "analysis/process_state.json",
            "content_key": "updated_process_state"
          }
        ],
        "root": "{{output_dir}}"
      }
    },
    {
      "type": "llm_generate",
      "config": {
        "model": "{{model|default:'openai/o4-mini'}}",
        "prompt": "Prepare components for next iteration or finalization.\n\nFinal Components from this iteration:\n{{categorized_components.final_components}}\n\nExisting Final Components:\n{{processing_results.final_components}}\n\nSub-Components for next iteration:\n{{sub_components}}\n\nCombine all final components and prepare sub-components for the next iteration.\n\nOutput a JSON object with structure:\n{\n  \"final_components\": [...combined final components...],\n  \"components_to_split\": [...sub-components...],\n  \"new_components\": [...sub-components...]\n}",
        "output_format": {
          "type": "object",
          "properties": {
            "final_components": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "component_id": { "type": "string" },
                  "needs_analysis": { "type": "boolean" }
                },
                "required": ["component_id", "needs_analysis"]
              }
            },
            "components_to_split": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "component_id": { "type": "string" },
                  "needs_analysis": { "type": "boolean" }
                },
                "required": ["component_id", "needs_analysis"]
              }
            },
            "new_components": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "component_id": { "type": "string" },
                  "needs_analysis": { "type": "boolean" }
                },
                "required": ["component_id", "needs_analysis"]
              }
            }
          },
          "required": [
            "final_components",
            "components_to_split",
            "new_components"
          ]
        },
        "output_key": "updated_processing_results"
      }
    },
    {
      "type": "write_files",
      "config": {
        "files": [
          {
            "path": "analysis/processing_results.json",
            "content_key": "updated_processing_results"
          }
        ],
        "root": "{{output_dir}}"
      }
    },
    {
      "type": "llm_generate",
      "config": {
        "model": "{{model|default:'openai/o4-mini'}}",
        "prompt": "Prepare components for the next iteration.\n\nSub-Components:\n{{sub_components}}\n\nIf there are sub-components, output them for the next iteration. Otherwise, output an empty array.\n\nOutput only a JSON array.",
        "output_format": [
          {
            "type": "object",
            "properties": {
              "component_id": { "type": "string" },
              "needs_analysis": { "type": "boolean" }
            },
            "required": ["component_id", "needs_analysis"]
          }
        ],
        "output_key": "next_iteration_components"
      }
    },
    {
      "type": "write_files",
      "config": {
        "files": [
          {
            "path": "analysis/current_components.json",
            "content_key": "next_iteration_components"
          }
        ],
        "root": "{{output_dir}}"
      }
    },
    {
      "type": "conditional",
      "config": {
        "condition": "and({{updated_process_state.iteration}} < {{updated_process_state.max_iterations}}, not({{updated_process_state.done_processing}}), {{next_iteration_components | size}} > 0)",
        "if_true": {
          "steps": [
            {
              "type": "execute_recipe",
              "config": {
                "recipe_path": "recipes/experimental/blueprint_generator/stages/stage_4_process_components.json"
              }
            }
          ]
        },
        "if_false": {
          "steps": [
            {
              "type": "execute_recipe",
              "config": {
                "recipe_path": "recipes/experimental/blueprint_generator/utilities/finalize_components.json"
              }
            }
          ]
        }
      }
    }
  ]
}
