{
  "steps": [
    {
      "type": "conditional",
      "config": {
        "condition": "file_exists('{{output_dir}}/analysis/final_components.json')",
        "if_true": {
          "steps": [
            {
              "type": "read_files",
              "config": {
                "path": "{{output_dir}}/analysis/final_components.json",
                "content_key": "final_component_list",
                "merge_mode": "dict"
              }
            }
          ]
        },
        "if_false": {
          "steps": [
            {
              "type": "read_files",
              "config": {
                "path": "{{output_dir}}/analysis/components_to_process.json",
                "content_key": "components_to_process",
                "merge_mode": "dict"
              }
            },
            {
              "type": "conditional",
              "config": {
                "condition": "file_exists('{{output_dir}}/analysis/process_state.json')",
                "if_true": {
                  "steps": [
                    {
                      "type": "read_files",
                      "config": {
                        "path": "{{output_dir}}/analysis/process_state.json",
                        "content_key": "process_state",
                        "merge_mode": "dict"
                      }
                    }
                  ]
                },
                "if_false": {
                  "steps": [
                    {
                      "type": "llm_generate",
                      "config": {
                        "prompt": "Initialize processing variables.\n\nOutput only this JSON object:\n{\n  \"iteration\": 0,\n  \"max_iterations\": 3,\n  \"done_processing\": false\n}",
                        "model": "{{model|default:'openai/o4-mini'}}",
                        "output_format": {
                          "type": "object",
                          "properties": {
                            "iteration": { "type": "integer" },
                            "max_iterations": { "type": "integer" },
                            "done_processing": { "type": "boolean" }
                          },
                          "required": [
                            "iteration",
                            "max_iterations",
                            "done_processing"
                          ]
                        },
                        "output_key": "process_state"
                      }
                    },
                    {
                      "type": "write_files",
                      "config": {
                        "files": [
                          {
                            "path": "analysis/process_state.json",
                            "content_key": "process_state"
                          }
                        ],
                        "root": "{{output_dir}}"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "conditional",
              "config": {
                "condition": "file_exists('{{output_dir}}/analysis/processing_results.json')",
                "if_true": {
                  "steps": [
                    {
                      "type": "read_files",
                      "config": {
                        "path": "{{output_dir}}/analysis/processing_results.json",
                        "content_key": "processing_results",
                        "merge_mode": "dict"
                      }
                    }
                  ]
                },
                "if_false": {
                  "steps": [
                    {
                      "type": "llm_generate",
                      "config": {
                        "prompt": "Initialize empty arrays for results.\n\nOutput only this JSON object:\n{\n  \"final_components\": [],\n  \"components_to_split\": [],\n  \"new_components\": []\n}",
                        "model": "{{model|default:'openai/o4-mini'}}",
                        "output_format": {
                          "type": "object",
                          "properties": {
                            "final_components": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "component_id": { "type": "string" },
                                  "needs_analysis": { "type": "boolean" }
                                },
                                "required": ["component_id", "needs_analysis"]
                              }
                            },
                            "components_to_split": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "component_id": { "type": "string" },
                                  "needs_analysis": { "type": "boolean" }
                                },
                                "required": ["component_id", "needs_analysis"]
                              }
                            },
                            "new_components": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "component_id": { "type": "string" },
                                  "needs_analysis": { "type": "boolean" }
                                },
                                "required": ["component_id", "needs_analysis"]
                              }
                            }
                          },
                          "required": [
                            "final_components",
                            "components_to_split",
                            "new_components"
                          ]
                        },
                        "output_key": "processing_results"
                      }
                    },
                    {
                      "type": "write_files",
                      "config": {
                        "files": [
                          {
                            "path": "analysis/processing_results.json",
                            "content_key": "processing_results"
                          }
                        ],
                        "root": "{{output_dir}}"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "conditional",
              "config": {
                "condition": "file_exists('{{output_dir}}/analysis/current_components.json')",
                "if_true": {
                  "steps": [
                    {
                      "type": "read_files",
                      "config": {
                        "path": "{{output_dir}}/analysis/current_components.json",
                        "content_key": "current_components",
                        "merge_mode": "dict"
                      }
                    }
                  ]
                },
                "if_false": {
                  "steps": [
                    {
                      "type": "llm_generate",
                      "config": {
                        "prompt": "Create a copy of the components to process.\n\nComponents:\n{{components_to_process}}\n\nOutput only this identical JSON array without any changes.",
                        "model": "{{model|default:'openai/o4-mini'}}",
                        "output_format": [
                          {
                            "type": "object",
                            "properties": {
                              "component_id": { "type": "string" },
                              "needs_analysis": { "type": "boolean" }
                            },
                            "required": ["component_id", "needs_analysis"]
                          }
                        ],
                        "output_key": "current_components"
                      }
                    },
                    {
                      "type": "write_files",
                      "config": {
                        "files": [
                          {
                            "path": "analysis/current_components.json",
                            "content_key": "current_components"
                          }
                        ],
                        "root": "{{output_dir}}"
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "conditional",
              "config": {
                "condition": "and({{process_state.iteration}} < {{process_state.max_iterations}}, not({{process_state.done_processing}}))",
                "if_true": {
                  "steps": [
                    {
                      "type": "execute_recipe",
                      "config": {
                        "recipe_path": "recipes/experimental/blueprint_generator/utilities/process_components_iteration.json"
                      }
                    }
                  ]
                },
                "if_false": {
                  "steps": [
                    {
                      "type": "execute_recipe",
                      "config": {
                        "recipe_path": "recipes/experimental/blueprint_generator/utilities/finalize_components.json"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  ]
}
