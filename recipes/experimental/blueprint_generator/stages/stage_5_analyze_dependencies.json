{
  "steps": [
    {
      "type": "conditional",
      "config": {
        "condition": "file_exists('{{output_dir}}/analysis/component_dependencies.json')",
        "if_true": {
          "steps": [
            {
              "type": "read_files",
              "config": {
                "path": "{{output_dir}}/analysis/component_dependencies.json",
                "content_key": "component_dependencies",
                "merge_mode": "dict"
              }
            }
          ]
        },
        "if_false": {
          "steps": [
            {
              "type": "read_files",
              "config": {
                "path": "{{output_dir}}/analysis/final_components.json",
                "content_key": "final_component_list",
                "merge_mode": "dict"
              }
            },
            {
              "type": "loop",
              "config": {
                "items": "final_component_list",
                "item_key": "component",
                "substeps": [
                  {
                    "type": "read_files",
                    "config": {
                      "path": "{{output_dir}}/components/{{component.component_id}}_spec.md",
                      "content_key": "component_spec"
                    }
                  },
                  {
                    "type": "llm_generate",
                    "config": {
                      "prompt": "Analyze the component specification to identify dependencies.\n\nComponent Specification:\n{{component_spec}}\n\nIdentify all other components this component depends on.\n\nOutput a JSON object with structure:\n{\n  \"component_id\": \"{{component.component_id}}\",\n  \"dependencies\": [\"dependency1\", \"dependency2\", ...]\n}",
                      "model": "{{model|default:'openai/o4-mini'}}",
                      "output_format": {
                        "type": "object",
                        "properties": {
                          "component_id": { "type": "string" },
                          "dependencies": {
                            "type": "array",
                            "items": { "type": "string" }
                          }
                        },
                        "required": ["component_id", "dependencies"]
                      },
                      "output_key": "component_dependencies"
                    }
                  }
                ],
                "result_key": "component_dependency_analysis"
              }
            },
            {
              "type": "llm_generate",
              "config": {
                "prompt": "Determine the order in which components should be generated based on dependencies.\n\nComponent Dependencies:\n{{component_dependency_analysis}}\n\nCreate a dependency graph and perform a topological sort to determine the generation order. The order should ensure that a component is generated only after all its dependencies have been generated.\n\nOutput a JSON array with the component IDs in the order they should be generated.",
                "model": "{{model|default:'openai/o4-mini'}}",
                "output_format": [{ "type": "string" }],
                "output_key": "component_generation_order"
              }
            },
            {
              "type": "llm_generate",
              "config": {
                "prompt": "Organize the components by their generation order.\n\nComponents:\n{{final_component_list}}\n\nGeneration Order:\n{{component_generation_order}}\n\nCreate an array of components in the correct generation order. Each component should have at least a component_id and any other relevant properties from the original final_component_list.\n\nOutput a JSON array of component objects in generation order.",
                "model": "{{model|default:'openai/o4-mini'}}",
                "output_format": [
                  {
                    "type": "object",
                    "properties": {
                      "component_id": { "type": "string" },
                      "needs_analysis": { "type": "boolean" }
                    },
                    "required": ["component_id", "needs_analysis"]
                  }
                ],
                "output_key": "ordered_components"
              }
            },
            {
              "type": "write_files",
              "config": {
                "files": [
                  {
                    "path": "analysis/component_generation_order.json",
                    "content_key": "component_generation_order"
                  },
                  {
                    "path": "analysis/ordered_components.json",
                    "content_key": "ordered_components"
                  },
                  {
                    "path": "analysis/component_dependencies.json",
                    "content_key": "component_dependency_analysis"
                  }
                ],
                "root": "{{output_dir}}"
              }
            }
          ]
        }
      }
    }
  ]
}
