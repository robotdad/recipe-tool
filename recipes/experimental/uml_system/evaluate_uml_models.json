{
  "steps": [
    {
      "type": "llm_generate",
      "config": {
        "prompt": "You are an expert UML architect tasked with evaluating the quality and completeness of UML diagrams generated from specifications. Review the following UML diagrams and assess whether they accurately and completely represent the system described in the specifications.\n\nSpecifications:\n```\n{{ structured_specifications }}\n```\n\nComponent Diagram:\n```\n{{ uml_diagrams.component_diagram }}\n```\n\nPackage Diagram:\n```\n{{ uml_diagrams.package_diagram }}\n```\n\nClass Diagrams:\n```\n{{ uml_diagrams.class_diagrams }}\n```\n\nSequence Diagrams:\n```\n{{ component_sequence_diagrams }}\n```\n\nState Diagrams:\n```\n{{ state_diagrams }}\n```\n\nEvaluate these diagrams for:\n1. Completeness - Do they cover all components, interfaces, classes, and interactions from the specifications?\n2. Consistency - Are there conflicts or contradictions between different diagrams?\n3. Clarity - Are the diagrams clear and easy to understand?\n4. UML Compliance - Do they follow UML notation and best practices?\n5. Traceability - Can each diagram element be traced back to the specifications?\n\nIdentify any issues that would require human review before proceeding to recipe generation.",
        "model": "{{ model | default: 'openai/gpt-4o' }}",
        "output_format": {
          "type": "object",
          "properties": {
            "needs_review": { "type": "boolean" },
            "completeness_score": { "type": "number" },
            "consistency_score": { "type": "number" },
            "clarity_score": { "type": "number" },
            "uml_compliance_score": { "type": "number" },
            "traceability_score": { "type": "number" },
            "overall_score": { "type": "number" },
            "issues": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "diagram_type": { "type": "string" },
                  "diagram_title": { "type": "string" },
                  "issue_type": { "type": "string" },
                  "description": { "type": "string" },
                  "severity": {
                    "type": "string",
                    "enum": ["low", "medium", "high"]
                  },
                  "suggestion": { "type": "string" }
                }
              }
            },
            "missing_elements": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "element_type": { "type": "string" },
                  "element_name": { "type": "string" },
                  "from_specification": { "type": "string" },
                  "suggested_diagram": { "type": "string" }
                }
              }
            }
          }
        },
        "output_key": "uml_evaluation"
      }
    },
    {
      "type": "llm_generate",
      "config": {
        "prompt": "Based on the UML evaluation results, create a list of detailed review items that a human reviewer should address. Format each item with specific questions or suggestions that will help improve the UML models.\n\nUML Evaluation: \n```\n{{ uml_evaluation }}\n```",
        "model": "{{ model | default: 'openai/gpt-4o' }}",
        "output_format": [
          {
            "type": "object",
            "properties": {
              "diagram_type": { "type": "string" },
              "diagram_title": { "type": "string" },
              "description": { "type": "string" },
              "question": { "type": "string" },
              "suggestion": { "type": "string" }
            }
          }
        ],
        "output_key": "uml_review_details"
      }
    },
    {
      "type": "llm_generate",
      "config": {
        "prompt": "Format the review items into markdown format. For each item in the list, create a section with the format:\n\n## [Diagram Type]: [Diagram Title]\n\n[Description]\n\n**Question**: [Question]\n\n**Suggestion**: [Suggestion]\n\nReview Items: \n```\n{{ uml_review_details }}\n```",
        "model": "{{ model | default: 'openai/gpt-4o' }}",
        "output_format": "text",
        "output_key": "uml_review_items"
      }
    },
    {
      "type": "llm_generate",
      "config": {
        "prompt": "Create a combined object containing all UML models for easier reference. Include the component diagram, package diagram, class diagrams, sequence diagrams, and state diagrams.\n\nUML Diagrams: \n```\n{{ uml_diagrams }}\n```\n\nComponent Sequence Diagrams: \n```\n{{ component_sequence_diagrams }}\n```\n\nState Diagrams: \n```\n{{ state_diagrams }}\n```",
        "model": "{{ model | default: 'openai/gpt-4o' }}",
        "output_format": {
          "type": "object",
          "properties": {
            "component_diagram": { "type": "string" },
            "package_diagram": { "type": "string" },
            "class_diagrams": { "type": "string" },
            "sequence_diagrams": { "type": "string" },
            "state_diagrams": { "type": "string" }
          }
        },
        "output_key": "uml_models"
      }
    }
  ]
}
