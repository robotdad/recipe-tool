{
  "steps": [
    {
      "type": "read_files",
      "config": {
        "path": "{{ candidate_spec_path }}",
        "content_key": "candidate_spec"
      }
    },
    {
      "type": "llm_generate",
      "config": {
        "prompt": "You are an expert developer helping to improve a candidate component specification by generating clarification questions. Based on the candidate specification and understanding of effective component design, create a comprehensive set of questions that would help make the specification complete and implementable.\n\nCandidate Specification:\n{{ candidate_spec }}\n\nComponent ID: {{ component_id}}\n\n{% if component_docs_spec_guide %}\nUse the following guide to understand what information is needed in an effective specification:\n<COMPONENT_DOCS_SPEC_GUIDE>\n{{ component_docs_spec_guide }}\n</COMPONENT_DOCS_SPEC_GUIDE>\n{% endif %}\n\n{% if implementation_philosophy %}\n<IMPLEMENTATION_PHILOSOPHY>\n{{ implementation_philosophy }}\n</IMPLEMENTATION_PHILOSOPHY>\n{% endif %}\n\n{% if modular_design_philosophy %}\n<MODULAR_DESIGN_PHILOSOPHY>\n{{ modular_design_philosophy }}\n</MODULAR_DESIGN_PHILOSOPHY>\n{% endif %}\n\nGenerate clarification questions organized into these categories:\n\n1. Purpose and Scope\n- Questions about the component's primary responsibility\n- Questions about boundaries and what's out of scope\n- Questions about the problem being solved\n\n2. Functional Requirements\n- Questions about specific capabilities needed\n- Questions about user/system interactions\n- Questions about expected inputs and outputs\n\n3. Technical Requirements\n- Questions about implementation constraints\n- Questions about performance requirements\n- Questions about security considerations\n\n4. Integration and Dependencies\n- Questions about how it interacts with other components\n- Questions about external dependencies\n- Questions about interface requirements\n\n5. Error Handling and Edge Cases\n- Questions about failure scenarios\n- Questions about edge cases\n- Questions about recovery mechanisms\n\nIn each category, provide 3-5 specific questions that would help improve the specification. Make the questions clear, specific, and directly relevant to the candidate specification. For each question, briefly explain why this information is important for implementation.",
        "model": "{{ model }}",
        "output_format": "text",
        "output_key": "clarification_questions"
      }
    },
    {
      "type": "llm_generate",
      "config": {
        "prompt": "Format the clarification questions as a structured markdown document that can be shared with stakeholders.\n\nClarification Questions:\n{{ clarification_questions }}\n\nCandidate Specification:\n{{ candidate_spec }}\n\nComponent ID: {{ component_id }}\n\nCreate a document with these sections:\n1. Introduction - Brief explanation of the purpose of this document and the component being specified\n2. Current Specification - A summary of the current candidate specification\n3. Key Areas Needing Clarification - Overview of the major gaps identified\n4. Detailed Questions - The clarification questions organized by category\n5. Next Steps - Guidance on how to use these questions to improve the specification\n\nThe file should be named exactly '{{ component_id }}_component_clarification_questions.md'. Do not include any subdirectories in the path.",
        "model": "{{ model }}",
        "output_format": "files",
        "output_key": "formatted_questions"
      }
    },
    {
      "type": "write_files",
      "config": {
        "files_key": "formatted_questions",
        "root": "{{ output_root }}"
      }
    }
  ]
}
